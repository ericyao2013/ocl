
# Lookup the Orocos::RTT compile and link flags and uses 
# LINK_DIRECTORIES, INCLUDE_DIRECTORIES and ADD_DEFINITIONS to export them.
# It depends on FindPkgConfig.cmake.

#This module requires OROCOS_INSTALL to be set in order to know
# where it can/should be found.

# Sets the following variables (example: target = lxrt)
#
# For rtt <= 1.2:
# OS_LXRT (defined)
# OROCOS_RTT OROCOS_RTT_INCLUDE_DIRS OROCOS_RTT_DEFINES OROCOS_RTT_LINK_DIRS  OROCOS_RTT_LIBS
#
# For rtt >= 1.4:
# OS_LXRT (defined)
# FLAVOR  = orocos-rtt-lxrt
# FLAVOR_TARGET = lxrt
# FLAVOR_TARGET_CAP = LXRT
# OROCOS_RTT OROCOS_RTT_INCLUDE_DIRS OROCOS_RTT_DEFINES OROCOS_RTT_LINK_DIRS  OROCOS_RTT_LIBS
#
# Check OROCOS_RTT_X.Y for the API version ('X.Y' = 1.2 or 1.4)
# For example, if OROCOS_RTT_1.4 is defined, then OROCOS_RTT_1.2 and OROCOS_RTT will also be defined.

INCLUDE (${PROJ_SOURCE_DIR}/config/FindPkgConfig.cmake)

    MESSAGE( STATUS "Detecting RTT" )
    SET(OROCOS_TARGET "gnulinux" CACHE STRING "")
    SET(OROCOS_CORBA_TARGET "corba-${OROCOS_TARGET}" CACHE STRING "")

    SET(ENV{PKG_CONFIG_PATH} "${OROCOS_INSTALL}/lib/pkgconfig:${OROCOS_INSTALL}/packages/install/lib/pkgconfig/")
    #MESSAGE( "Setting environment of PKG_CONFIG_PATH to: $ENV{PKG_CONFIG_PATH}")
    MESSAGE( "Searching RTT in ${OROCOS_INSTALL}:" )

    FILE(GLOB OROCOS_RTT_FLAVORS RELATIVE "${OROCOS_INSTALL}/lib/pkgconfig/" "${OROCOS_INSTALL}/lib/pkgconfig/orocos-rtt-*.pc" )
    IF ( OROCOS_RTT_FLAVORS ) 
      # OROCOS 1.4 and later
      MESSAGE( "Found flavors: ${OROCOS_RTT_FLAVORS} ")
      FOREACH(FLAVOR ${OROCOS_RTT_FLAVORS})
	STRING(REGEX REPLACE ".pc" "" FLAVOR ${FLAVOR})
	STRING(REGEX REPLACE "orocos-rtt-" "" FLAVOR_TARGET ${FLAVOR})
	STRING(TOUPPER ${FLAVOR_TARGET} FLAVOR_TARGET_CAP)

	IF( CMAKE_PKGCONFIG_EXECUTABLE )	
		PKGCONFIG("${FLAVOR} >= 1.3.0" OROCOS_RTT_${FLAVOR_TARGET_CAP}_1.4 OROCOS_RTT_${FLAVOR_TARGET_CAP}_INCLUDE_DIRS_1.4 OROCOS_RTT_${FLAVOR_TARGET_CAP}_DEFINES_1.4 OROCOS_RTT_${FLAVOR_TARGET_CAP}_LINK_DIRS_1.4 OROCOS_RTT_${FLAVOR_TARGET_CAP}_LIBS_1.4 )
	ELSE( CMAKE_PKGCONFIG_EXECUTABLE )
	  # Assume win32 platform... ( .lib suffix )
	      SET( OROCOS_RTT_${FLAVOR_TARGET_CAP}_1.4 TRUE )
	      SET( OROCOS_RTT_${FLAVOR_TARGET_CAP}_INCLUDE_DIRS_1.4 ${OROCOS_INSTALL}/include)
	      SET( OROCOS_RTT_${FLAVOR_TARGET_CAP}_DEFINES_1.4 -DOROCOS_TARGET=${OROCOS_TARGET} )
	      SET( OROCOS_RTT_${FLAVOR_TARGET_CAP}_LINK_DIRS_1.4 ${OROCOS_INSTALL}/lib )
	      SET( OROCOS_RTT_${FLAVOR_TARGET_CAP}_LIBS_1.4 ${OROCOS_INSTALL}/lib/orocos-rtt-${OROCOS_TARGET}${CMAKE_DEBUG_PREFIX}.lib)
	ENDIF( CMAKE_PKGCONFIG_EXECUTABLE )	
	IF ( OROCOS_TARGET STREQUAL "${FLAVOR_TARGET}")
	  MESSAGE(" Using: ${FLAVOR_TARGET} . Set OROCOS_TARGET variable to another one to change the compile target.")
	  # also enable 1.2/1.4 plain.
	  SET(OROCOS_RTT_1.4 OROCOS_RTT_${FLAVOR_TARGET_CAP}_1.4)
	  SET(OROCOS_RTT_1.2 OROCOS_RTT_${FLAVOR_TARGET_CAP}_1.4)
	  # set paths

	  IF( CMAKE_PKGCONFIG_EXECUTABLE )
	      PKGCONFIG( "orocos-rtt-${FLAVOR_TARGET} >= 1.0.0" OROCOS_RTT OROCOS_RTT_INCLUDE_DIRS OROCOS_RTT_DEFINES OROCOS_RTT_LINK_DIRS OROCOS_RTT_LIBS )

	  ELSE( CMAKE_PKGCONFIG_EXECUTABLE )
	      SET( OROCOS_RTT TRUE )
	      SET( OROCOS_RTT_INCLUDE_DIRS ${OROCOS_INSTALL}/include )
	      SET( OROCOS_RTT_DEFINES -DOROCOS_TARGET=${OROCOS_TARGET} )
	      SET( OROCOS_RTT_LINK_DIRS ${OROCOS_INSTALL}/lib )
	      SET( OROCOS_RTT_LIBS debug ${OROCOS_INSTALL}/lib/orocos-rtt-${OROCOS_TARGET}${CMAKE_DEBUG_POSTFIX}.lib optimized ${OROCOS_INSTALL}/lib/orocos-rtt-${OROCOS_TARGET}.lib)
	  ENDIF( CMAKE_PKGCONFIG_EXECUTABLE )	
          MESSAGE("   Includes in: ${OROCOS_RTT_INCLUDE_DIRS}")
          MESSAGE("   Libraries in: ${OROCOS_RTT_LINK_DIRS}")
          MESSAGE("   Libraries: ${OROCOS_RTT_LIBS}")
          MESSAGE("   Defines: ${OROCOS_RTT_DEFINES}")
	  
	  INCLUDE_DIRECTORIES( ${OROCOS_RTT_INCLUDE_DIRS} )
          LINK_DIRECTORIES( ${OROCOS_RTT_LINK_DIRS} )
	  ADD_DEFINITIONS( ${OROCOS_RTT_DEFINES} )
	  
	  SET(OS_${FLAVOR_TARGET_CAP} 1)
	  
	ENDIF ( OROCOS_TARGET STREQUAL "${FLAVOR_TARGET}")
	
	IF(OROCOS_CORBA_TARGET STREQUAL "${FLAVOR_TARGET}")
	  MESSAGE( "Detected CORBA build for ${OROCOS_TARGET}" )
	  IF( CMAKE_PKGCONFIG_EXECUTABLE )
	      PKGCONFIG("orocos-rtt-${FLAVOR_TARGET}" CORBA_ENABLED  OROCOS_RTT_CORBA_INCLUDE_DIRS OROCOS_RTT_CORBA_DEFINES OROCOS_RTT_CORBA_LINK_DIRS OROCOS_RTT_CORBA_LIBS )
	  ELSE( CMAKE_PKGCONFIG_EXECUTABLE )
	      SET( ENABLE_CORBA TRUE )
	      SET( CORBA_ENABLED TRUE )
	      MESSAGE( "Corba implementation could not be detected. Use TAO or OMNIORB. Defaulting to TAO." )
	      SET( CORBA_IMPLEMENTATION "TAO" CACHE STRING "Corba implementation could not be detected. Use TAO or OMNIORB. Defaulting to TAO.")
	      find_package(Corba)
	      SET( OROCOS_RTT_CORBA_INCLUDE_DIRS ${OROCOS_INSTALL}/include ${CORBA_INCLUDE_DIRS})
	      SET( OROCOS_RTT_CORBA_DEFINES -DOROCOS_TARGET=${OROCOS_TARGET} ${CORBA_DEFINITIONS})
	      SET( OROCOS_RTT_CORBA_LINK_DIRS ${OROCOS_INSTALL}/lib )
	      SET( OROCOS_RTT_CORBA_LIBS debug ${OROCOS_INSTALL}/lib/orocos-rtt-corba-${OROCOS_TARGET}${CMAKE_DEBUG_POSTFIX}.lib optimized ${OROCOS_INSTALL}/lib/orocos-rtt-corba-${OROCOS_TARGET}.lib ${CORBA_USER_LINK_LIBS})
	  ENDIF( CMAKE_PKGCONFIG_EXECUTABLE )	
          MESSAGE("   Includes in: ${OROCOS_RTT_CORBA_INCLUDE_DIRS}")
          MESSAGE("   Libraries in: ${OROCOS_RTT_CORBA_LINK_DIRS}")
          MESSAGE("   Libraries: ${OROCOS_RTT_CORBA_LIBS}")
          MESSAGE("   Defines: ${OROCOS_RTT_CORBA_DEFINES}")
	  
	  INCLUDE_DIRECTORIES( ${OROCOS_RTT_CORBA_INCLUDE_DIRS} )
          LINK_DIRECTORIES( ${OROCOS_RTT_CORBA_LINK_DIRS} )
	  ADD_DEFINITIONS( ${OROCOS_RTT_CORBA_DEFINES} )
	  
	ENDIF(OROCOS_CORBA_TARGET STREQUAL "${FLAVOR_TARGET}")
      ENDFOREACH(FLAVOR ${OROCOS_RTT_FLAVORS})
      
      IF( NOT OROCOS_RTT )
	MESSAGE(FATAL_ERROR "Please set OROCOS_TARGET variable (now: ${OROCOS_TARGET}) to one of the detected targets above or correct OROCOS_INSTALL.")
      ENDIF( NOT OROCOS_RTT )

    ELSE ( OROCOS_RTT_FLAVORS ) 
       MESSAGE( FATAL_ERROR "Can't find Orocos Real-Time Toolkit (orocos-rtt-${OROCOS_TARGET}.pc)")
    ENDIF ( OROCOS_RTT_FLAVORS ) 


